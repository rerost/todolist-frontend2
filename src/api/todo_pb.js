/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */

var jspb = require("google-protobuf");
var goog = jspb;
var global = Function("return this")();

var google_protobuf_empty_pb = require("google-protobuf/google/protobuf/empty_pb.js");
var google_protobuf_timestamp_pb = require("google-protobuf/google/protobuf/timestamp_pb.js");
var google_protobuf_wrappers_pb = require("google-protobuf/google/protobuf/wrappers_pb.js");
var google_protobuf_field_mask_pb = require("google-protobuf/google/protobuf/field_mask_pb.js");
goog.exportSymbol(
  "proto.com.github.rerost.todolist_server.api.CreateTaskRequest",
  null,
  global
);
goog.exportSymbol(
  "proto.com.github.rerost.todolist_server.api.DeleteTaskRequest",
  null,
  global
);
goog.exportSymbol(
  "proto.com.github.rerost.todolist_server.api.GetTaskRequest",
  null,
  global
);
goog.exportSymbol(
  "proto.com.github.rerost.todolist_server.api.ListTasksRequest",
  null,
  global
);
goog.exportSymbol(
  "proto.com.github.rerost.todolist_server.api.ListTasksResponse",
  null,
  global
);
goog.exportSymbol(
  "proto.com.github.rerost.todolist_server.api.Task",
  null,
  global
);
goog.exportSymbol(
  "proto.com.github.rerost.todolist_server.api.UpdateTaskRequest",
  null,
  global
);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.rerost.todolist_server.api.Task = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.github.rerost.todolist_server.api.Task, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.github.rerost.todolist_server.api.Task.displayName =
    "proto.com.github.rerost.todolist_server.api.Task";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.github.rerost.todolist_server.api.Task.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.com.github.rerost.todolist_server.api.Task.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.github.rerost.todolist_server.api.Task} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.github.rerost.todolist_server.api.Task.toObject = function(
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        taskId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        title: jspb.Message.getFieldWithDefault(msg, 2, ""),
        createdAt:
          (f = msg.getCreatedAt()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        deadline:
          (f = msg.getDeadline()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        note:
          (f = msg.getNote()) &&
          google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.rerost.todolist_server.api.Task}
 */
proto.com.github.rerost.todolist_server.api.Task.deserializeBinary = function(
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.github.rerost.todolist_server.api.Task();
  return proto.com.github.rerost.todolist_server.api.Task.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.rerost.todolist_server.api.Task} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.rerost.todolist_server.api.Task}
 */
proto.com.github.rerost.todolist_server.api.Task.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setTaskId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      case 3:
        var value = new google_protobuf_timestamp_pb.Timestamp();
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        );
        msg.setCreatedAt(value);
        break;
      case 4:
        var value = new google_protobuf_timestamp_pb.Timestamp();
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        );
        msg.setDeadline(value);
        break;
      case 5:
        var value = new google_protobuf_wrappers_pb.StringValue();
        reader.readMessage(
          value,
          google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader
        );
        msg.setNote(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.rerost.todolist_server.api.Task.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.github.rerost.todolist_server.api.Task.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.github.rerost.todolist_server.api.Task} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.github.rerost.todolist_server.api.Task.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getTaskId();
  if (f !== 0) {
    writer.writeInt64(1, f);
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeadline();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNote();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};

/**
 * optional int64 task_id = 1;
 * @return {number}
 */
proto.com.github.rerost.todolist_server.api.Task.prototype.getTaskId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/** @param {number} value */
proto.com.github.rerost.todolist_server.api.Task.prototype.setTaskId = function(
  value
) {
  jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string title = 2;
 * @return {string}
 */
proto.com.github.rerost.todolist_server.api.Task.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/** @param {string} value */
proto.com.github.rerost.todolist_server.api.Task.prototype.setTitle = function(
  value
) {
  jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional google.protobuf.Timestamp created_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.com.github.rerost.todolist_server.api.Task.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    3
  ));
};

/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.com.github.rerost.todolist_server.api.Task.prototype.setCreatedAt = function(
  value
) {
  jspb.Message.setWrapperField(this, 3, value);
};

proto.com.github.rerost.todolist_server.api.Task.prototype.clearCreatedAt = function() {
  this.setCreatedAt(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.github.rerost.todolist_server.api.Task.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional google.protobuf.Timestamp deadline = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.com.github.rerost.todolist_server.api.Task.prototype.getDeadline = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    4
  ));
};

/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.com.github.rerost.todolist_server.api.Task.prototype.setDeadline = function(
  value
) {
  jspb.Message.setWrapperField(this, 4, value);
};

proto.com.github.rerost.todolist_server.api.Task.prototype.clearDeadline = function() {
  this.setDeadline(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.github.rerost.todolist_server.api.Task.prototype.hasDeadline = function() {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * optional google.protobuf.StringValue note = 5;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.com.github.rerost.todolist_server.api.Task.prototype.getNote = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_wrappers_pb.StringValue,
    5
  ));
};

/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.com.github.rerost.todolist_server.api.Task.prototype.setNote = function(
  value
) {
  jspb.Message.setWrapperField(this, 5, value);
};

proto.com.github.rerost.todolist_server.api.Task.prototype.clearNote = function() {
  this.setNote(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.github.rerost.todolist_server.api.Task.prototype.hasNote = function() {
  return jspb.Message.getField(this, 5) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.rerost.todolist_server.api.ListTasksRequest = function(
  opt_data
) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(
  proto.com.github.rerost.todolist_server.api.ListTasksRequest,
  jspb.Message
);
if (goog.DEBUG && !COMPILED) {
  proto.com.github.rerost.todolist_server.api.ListTasksRequest.displayName =
    "proto.com.github.rerost.todolist_server.api.ListTasksRequest";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.github.rerost.todolist_server.api.ListTasksRequest.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.com.github.rerost.todolist_server.api.ListTasksRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.github.rerost.todolist_server.api.ListTasksRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.github.rerost.todolist_server.api.ListTasksRequest.toObject = function(
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        fields:
          (f = msg.getFields()) &&
          google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.rerost.todolist_server.api.ListTasksRequest}
 */
proto.com.github.rerost.todolist_server.api.ListTasksRequest.deserializeBinary = function(
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.github.rerost.todolist_server.api.ListTasksRequest();
  return proto.com.github.rerost.todolist_server.api.ListTasksRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.rerost.todolist_server.api.ListTasksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.rerost.todolist_server.api.ListTasksRequest}
 */
proto.com.github.rerost.todolist_server.api.ListTasksRequest.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new google_protobuf_field_mask_pb.FieldMask();
        reader.readMessage(
          value,
          google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader
        );
        msg.setFields(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.rerost.todolist_server.api.ListTasksRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.github.rerost.todolist_server.api.ListTasksRequest.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.github.rerost.todolist_server.api.ListTasksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.github.rerost.todolist_server.api.ListTasksRequest.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getFields();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};

/**
 * optional google.protobuf.FieldMask fields = 1;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.com.github.rerost.todolist_server.api.ListTasksRequest.prototype.getFields = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_field_mask_pb.FieldMask,
    1
  ));
};

/** @param {?proto.google.protobuf.FieldMask|undefined} value */
proto.com.github.rerost.todolist_server.api.ListTasksRequest.prototype.setFields = function(
  value
) {
  jspb.Message.setWrapperField(this, 1, value);
};

proto.com.github.rerost.todolist_server.api.ListTasksRequest.prototype.clearFields = function() {
  this.setFields(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.github.rerost.todolist_server.api.ListTasksRequest.prototype.hasFields = function() {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.rerost.todolist_server.api.ListTasksResponse = function(
  opt_data
) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.com.github.rerost.todolist_server.api.ListTasksResponse
      .repeatedFields_,
    null
  );
};
goog.inherits(
  proto.com.github.rerost.todolist_server.api.ListTasksResponse,
  jspb.Message
);
if (goog.DEBUG && !COMPILED) {
  proto.com.github.rerost.todolist_server.api.ListTasksResponse.displayName =
    "proto.com.github.rerost.todolist_server.api.ListTasksResponse";
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.github.rerost.todolist_server.api.ListTasksResponse.repeatedFields_ = [
  1
];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.github.rerost.todolist_server.api.ListTasksResponse.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.com.github.rerost.todolist_server.api.ListTasksResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.github.rerost.todolist_server.api.ListTasksResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.github.rerost.todolist_server.api.ListTasksResponse.toObject = function(
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        tasksList: jspb.Message.toObjectList(
          msg.getTasksList(),
          proto.com.github.rerost.todolist_server.api.Task.toObject,
          includeInstance
        )
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.rerost.todolist_server.api.ListTasksResponse}
 */
proto.com.github.rerost.todolist_server.api.ListTasksResponse.deserializeBinary = function(
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.github.rerost.todolist_server.api.ListTasksResponse();
  return proto.com.github.rerost.todolist_server.api.ListTasksResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.rerost.todolist_server.api.ListTasksResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.rerost.todolist_server.api.ListTasksResponse}
 */
proto.com.github.rerost.todolist_server.api.ListTasksResponse.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.com.github.rerost.todolist_server.api.Task();
        reader.readMessage(
          value,
          proto.com.github.rerost.todolist_server.api.Task
            .deserializeBinaryFromReader
        );
        msg.addTasks(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.rerost.todolist_server.api.ListTasksResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.github.rerost.todolist_server.api.ListTasksResponse.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.github.rerost.todolist_server.api.ListTasksResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.github.rerost.todolist_server.api.ListTasksResponse.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getTasksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.github.rerost.todolist_server.api.Task.serializeBinaryToWriter
    );
  }
};

/**
 * repeated Task tasks = 1;
 * @return {!Array<!proto.com.github.rerost.todolist_server.api.Task>}
 */
proto.com.github.rerost.todolist_server.api.ListTasksResponse.prototype.getTasksList = function() {
  return /** @type{!Array<!proto.com.github.rerost.todolist_server.api.Task>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.com.github.rerost.todolist_server.api.Task,
    1
  ));
};

/** @param {!Array<!proto.com.github.rerost.todolist_server.api.Task>} value */
proto.com.github.rerost.todolist_server.api.ListTasksResponse.prototype.setTasksList = function(
  value
) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.com.github.rerost.todolist_server.api.Task=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.github.rerost.todolist_server.api.Task}
 */
proto.com.github.rerost.todolist_server.api.ListTasksResponse.prototype.addTasks = function(
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    1,
    opt_value,
    proto.com.github.rerost.todolist_server.api.Task,
    opt_index
  );
};

proto.com.github.rerost.todolist_server.api.ListTasksResponse.prototype.clearTasksList = function() {
  this.setTasksList([]);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.rerost.todolist_server.api.GetTaskRequest = function(
  opt_data
) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(
  proto.com.github.rerost.todolist_server.api.GetTaskRequest,
  jspb.Message
);
if (goog.DEBUG && !COMPILED) {
  proto.com.github.rerost.todolist_server.api.GetTaskRequest.displayName =
    "proto.com.github.rerost.todolist_server.api.GetTaskRequest";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.github.rerost.todolist_server.api.GetTaskRequest.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.com.github.rerost.todolist_server.api.GetTaskRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.github.rerost.todolist_server.api.GetTaskRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.github.rerost.todolist_server.api.GetTaskRequest.toObject = function(
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        taskId: jspb.Message.getFieldWithDefault(msg, 1, "")
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.rerost.todolist_server.api.GetTaskRequest}
 */
proto.com.github.rerost.todolist_server.api.GetTaskRequest.deserializeBinary = function(
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.github.rerost.todolist_server.api.GetTaskRequest();
  return proto.com.github.rerost.todolist_server.api.GetTaskRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.rerost.todolist_server.api.GetTaskRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.rerost.todolist_server.api.GetTaskRequest}
 */
proto.com.github.rerost.todolist_server.api.GetTaskRequest.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTaskId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.rerost.todolist_server.api.GetTaskRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.github.rerost.todolist_server.api.GetTaskRequest.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.github.rerost.todolist_server.api.GetTaskRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.github.rerost.todolist_server.api.GetTaskRequest.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string task_id = 1;
 * @return {string}
 */
proto.com.github.rerost.todolist_server.api.GetTaskRequest.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/** @param {string} value */
proto.com.github.rerost.todolist_server.api.GetTaskRequest.prototype.setTaskId = function(
  value
) {
  jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.rerost.todolist_server.api.CreateTaskRequest = function(
  opt_data
) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(
  proto.com.github.rerost.todolist_server.api.CreateTaskRequest,
  jspb.Message
);
if (goog.DEBUG && !COMPILED) {
  proto.com.github.rerost.todolist_server.api.CreateTaskRequest.displayName =
    "proto.com.github.rerost.todolist_server.api.CreateTaskRequest";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.github.rerost.todolist_server.api.CreateTaskRequest.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.com.github.rerost.todolist_server.api.CreateTaskRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.github.rerost.todolist_server.api.CreateTaskRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.github.rerost.todolist_server.api.CreateTaskRequest.toObject = function(
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        task:
          (f = msg.getTask()) &&
          proto.com.github.rerost.todolist_server.api.Task.toObject(
            includeInstance,
            f
          )
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.rerost.todolist_server.api.CreateTaskRequest}
 */
proto.com.github.rerost.todolist_server.api.CreateTaskRequest.deserializeBinary = function(
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.github.rerost.todolist_server.api.CreateTaskRequest();
  return proto.com.github.rerost.todolist_server.api.CreateTaskRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.rerost.todolist_server.api.CreateTaskRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.rerost.todolist_server.api.CreateTaskRequest}
 */
proto.com.github.rerost.todolist_server.api.CreateTaskRequest.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.com.github.rerost.todolist_server.api.Task();
        reader.readMessage(
          value,
          proto.com.github.rerost.todolist_server.api.Task
            .deserializeBinaryFromReader
        );
        msg.setTask(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.rerost.todolist_server.api.CreateTaskRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.github.rerost.todolist_server.api.CreateTaskRequest.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.github.rerost.todolist_server.api.CreateTaskRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.github.rerost.todolist_server.api.CreateTaskRequest.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getTask();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.github.rerost.todolist_server.api.Task.serializeBinaryToWriter
    );
  }
};

/**
 * optional Task task = 1;
 * @return {?proto.com.github.rerost.todolist_server.api.Task}
 */
proto.com.github.rerost.todolist_server.api.CreateTaskRequest.prototype.getTask = function() {
  return /** @type{?proto.com.github.rerost.todolist_server.api.Task} */ (jspb.Message.getWrapperField(
    this,
    proto.com.github.rerost.todolist_server.api.Task,
    1
  ));
};

/** @param {?proto.com.github.rerost.todolist_server.api.Task|undefined} value */
proto.com.github.rerost.todolist_server.api.CreateTaskRequest.prototype.setTask = function(
  value
) {
  jspb.Message.setWrapperField(this, 1, value);
};

proto.com.github.rerost.todolist_server.api.CreateTaskRequest.prototype.clearTask = function() {
  this.setTask(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.github.rerost.todolist_server.api.CreateTaskRequest.prototype.hasTask = function() {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.rerost.todolist_server.api.UpdateTaskRequest = function(
  opt_data
) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(
  proto.com.github.rerost.todolist_server.api.UpdateTaskRequest,
  jspb.Message
);
if (goog.DEBUG && !COMPILED) {
  proto.com.github.rerost.todolist_server.api.UpdateTaskRequest.displayName =
    "proto.com.github.rerost.todolist_server.api.UpdateTaskRequest";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.github.rerost.todolist_server.api.UpdateTaskRequest.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.com.github.rerost.todolist_server.api.UpdateTaskRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.github.rerost.todolist_server.api.UpdateTaskRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.github.rerost.todolist_server.api.UpdateTaskRequest.toObject = function(
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        task:
          (f = msg.getTask()) &&
          proto.com.github.rerost.todolist_server.api.Task.toObject(
            includeInstance,
            f
          )
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.rerost.todolist_server.api.UpdateTaskRequest}
 */
proto.com.github.rerost.todolist_server.api.UpdateTaskRequest.deserializeBinary = function(
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.github.rerost.todolist_server.api.UpdateTaskRequest();
  return proto.com.github.rerost.todolist_server.api.UpdateTaskRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.rerost.todolist_server.api.UpdateTaskRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.rerost.todolist_server.api.UpdateTaskRequest}
 */
proto.com.github.rerost.todolist_server.api.UpdateTaskRequest.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.com.github.rerost.todolist_server.api.Task();
        reader.readMessage(
          value,
          proto.com.github.rerost.todolist_server.api.Task
            .deserializeBinaryFromReader
        );
        msg.setTask(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.rerost.todolist_server.api.UpdateTaskRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.github.rerost.todolist_server.api.UpdateTaskRequest.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.github.rerost.todolist_server.api.UpdateTaskRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.github.rerost.todolist_server.api.UpdateTaskRequest.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getTask();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.github.rerost.todolist_server.api.Task.serializeBinaryToWriter
    );
  }
};

/**
 * optional Task task = 1;
 * @return {?proto.com.github.rerost.todolist_server.api.Task}
 */
proto.com.github.rerost.todolist_server.api.UpdateTaskRequest.prototype.getTask = function() {
  return /** @type{?proto.com.github.rerost.todolist_server.api.Task} */ (jspb.Message.getWrapperField(
    this,
    proto.com.github.rerost.todolist_server.api.Task,
    1
  ));
};

/** @param {?proto.com.github.rerost.todolist_server.api.Task|undefined} value */
proto.com.github.rerost.todolist_server.api.UpdateTaskRequest.prototype.setTask = function(
  value
) {
  jspb.Message.setWrapperField(this, 1, value);
};

proto.com.github.rerost.todolist_server.api.UpdateTaskRequest.prototype.clearTask = function() {
  this.setTask(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.github.rerost.todolist_server.api.UpdateTaskRequest.prototype.hasTask = function() {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.github.rerost.todolist_server.api.DeleteTaskRequest = function(
  opt_data
) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(
  proto.com.github.rerost.todolist_server.api.DeleteTaskRequest,
  jspb.Message
);
if (goog.DEBUG && !COMPILED) {
  proto.com.github.rerost.todolist_server.api.DeleteTaskRequest.displayName =
    "proto.com.github.rerost.todolist_server.api.DeleteTaskRequest";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.github.rerost.todolist_server.api.DeleteTaskRequest.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.com.github.rerost.todolist_server.api.DeleteTaskRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.github.rerost.todolist_server.api.DeleteTaskRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.github.rerost.todolist_server.api.DeleteTaskRequest.toObject = function(
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        taskId: jspb.Message.getFieldWithDefault(msg, 1, "")
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.github.rerost.todolist_server.api.DeleteTaskRequest}
 */
proto.com.github.rerost.todolist_server.api.DeleteTaskRequest.deserializeBinary = function(
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.github.rerost.todolist_server.api.DeleteTaskRequest();
  return proto.com.github.rerost.todolist_server.api.DeleteTaskRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.github.rerost.todolist_server.api.DeleteTaskRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.github.rerost.todolist_server.api.DeleteTaskRequest}
 */
proto.com.github.rerost.todolist_server.api.DeleteTaskRequest.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTaskId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.github.rerost.todolist_server.api.DeleteTaskRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.github.rerost.todolist_server.api.DeleteTaskRequest.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.github.rerost.todolist_server.api.DeleteTaskRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.github.rerost.todolist_server.api.DeleteTaskRequest.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getTaskId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string task_id = 1;
 * @return {string}
 */
proto.com.github.rerost.todolist_server.api.DeleteTaskRequest.prototype.getTaskId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/** @param {string} value */
proto.com.github.rerost.todolist_server.api.DeleteTaskRequest.prototype.setTaskId = function(
  value
) {
  jspb.Message.setProto3StringField(this, 1, value);
};

goog.object.extend(exports, proto.com.github.rerost.todolist_server.api);
